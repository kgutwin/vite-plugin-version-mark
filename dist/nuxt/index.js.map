{"version":3,"sources":["../../src/plugins/nuxt3.ts","../../src/plugins/core/main.ts"],"sourcesContent":["// https://github.com/nuxt-modules/google-adsense/blob/master/src/module.ts\nimport {defineNuxtModule} from '@nuxt/kit'\nimport {VitePluginVersionMarkInput, analyticOptions} from './core/main'\n\ntype ModuleOptions = VitePluginVersionMarkInput\nconst nuxtVersionMark = defineNuxtModule<ModuleOptions>({\n  meta: {\n    name: 'nuxt-version-mark',\n  },\n  // https://github.com/nuxt/bridge/blob/main/packages/bridge/src/module.ts\n  async setup(options, nuxt) {\n    const {\n      ifMeta,\n      ifLog,\n      ifGlobal,\n      printVersion,\n      printName,\n      printInfo,\n    } = await analyticOptions(options)\n\n    nuxt.options.app.head.meta = nuxt.options.app.head.meta || []\n    nuxt.options.app.head.script = nuxt.options.app.head.script || []\n\n    ifMeta && nuxt.options.app.head.meta.push({\n      name: 'application-name',\n      content: printInfo,\n    })\n    ifLog && nuxt.options.app.head.script.push({\n      children: `console.log(\"${printInfo}\")`\n    })\n    ifGlobal && nuxt.options.app.head.script.push({\n      children: `__${printName}__ = \"${printVersion}\"`\n    })\n  }\n})\n\nexport type { ModuleOptions }\nexport default nuxtVersionMark\n","import childProcess from 'child_process'\n\nexport interface VitePluginVersionMarkInput {\n  name?: string\n  version?: string\n  ifGitSHA?: boolean\n  ifShortSHA?: boolean\n  gitCommand?: string\n  ifMeta?: boolean\n  ifLog?: boolean\n  ifGlobal?: boolean\n}\n\nconst getGitSHA = (ifShortSHA: boolean, gitCommand: string | undefined) => {\n  const {exec} = childProcess\n  let sh: string\n  if (gitCommand) {\n    sh = gitCommand\n  } else if (ifShortSHA) {\n    sh = 'git rev-parse --short HEAD'\n  } else {\n    sh = 'git rev-parse HEAD'\n  }\n\n  return new Promise((resolve, reject) => {\n    exec(sh, (error, stdout) => {\n      if (error) {\n        reject(error)\n      } else {\n        const output = stdout.toString()?.replace('\\n', '')\n        resolve(output)\n      }\n    })\n  })\n}\n\nexport const analyticOptions = async (options: VitePluginVersionMarkInput) => {\n  const {\n    name = process.env['npm_package_name'],\n    version = process.env['npm_package_version'],\n    ifGitSHA = false,\n    ifShortSHA = true,\n    gitCommand = undefined,\n    ifMeta = true,\n    ifLog = true,\n    ifGlobal = true,\n  } = options\n\n  const printVersion = ifGitSHA ? await getGitSHA(ifShortSHA, gitCommand) : version\n  const printName = `${name?.replace(/((?!\\w).)/g, '_')?.toLocaleUpperCase?.()}_VERSION`\n  const printInfo = `${printName}: ${printVersion}`\n\n  return {\n    ifMeta,\n    ifLog,\n    ifGlobal,\n    printVersion,\n    printName,\n    printInfo,\n  }\n}\n"],"mappings":";AACA,SAAQ,wBAAuB;;;ACD/B,OAAO,kBAAkB;AAazB,IAAM,YAAY,CAAC,YAAqB,eAAmC;AACzE,QAAM,EAAC,KAAI,IAAI;AACf,MAAI;AACJ,MAAI,YAAY;AACd,SAAK;AAAA,EACP,WAAW,YAAY;AACrB,SAAK;AAAA,EACP,OAAO;AACL,SAAK;AAAA,EACP;AAEA,SAAO,IAAI,QAAQ,CAAC,SAAS,WAAW;AACtC,SAAK,IAAI,CAAC,OAAO,WAAW;AAC1B,UAAI,OAAO;AACT,eAAO,KAAK;AAAA,MACd,OAAO;AACL,cAAM,SAAS,OAAO,SAAS,GAAG,QAAQ,MAAM,EAAE;AAClD,gBAAQ,MAAM;AAAA,MAChB;AAAA,IACF,CAAC;AAAA,EACH,CAAC;AACH;AAEO,IAAM,kBAAkB,OAAO,YAAwC;AAC5E,QAAM;AAAA,IACJ,OAAO,QAAQ,IAAI;AAAA,IACnB,UAAU,QAAQ,IAAI;AAAA,IACtB,WAAW;AAAA,IACX,aAAa;AAAA,IACb,aAAa;AAAA,IACb,SAAS;AAAA,IACT,QAAQ;AAAA,IACR,WAAW;AAAA,EACb,IAAI;AAEJ,QAAM,eAAe,WAAW,MAAM,UAAU,YAAY,UAAU,IAAI;AAC1E,QAAM,YAAY,GAAG,MAAM,QAAQ,cAAc,GAAG,GAAG,oBAAoB;AAC3E,QAAM,YAAY,GAAG,cAAc;AAEnC,SAAO;AAAA,IACL;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,EACF;AACF;;;ADvDA,IAAM,kBAAkB,iBAAgC;AAAA,EACtD,MAAM;AAAA,IACJ,MAAM;AAAA,EACR;AAAA,EAEA,MAAM,MAAM,SAAS,MAAM;AACzB,UAAM;AAAA,MACJ;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,IACF,IAAI,MAAM,gBAAgB,OAAO;AAEjC,SAAK,QAAQ,IAAI,KAAK,OAAO,KAAK,QAAQ,IAAI,KAAK,QAAQ,CAAC;AAC5D,SAAK,QAAQ,IAAI,KAAK,SAAS,KAAK,QAAQ,IAAI,KAAK,UAAU,CAAC;AAEhE,cAAU,KAAK,QAAQ,IAAI,KAAK,KAAK,KAAK;AAAA,MACxC,MAAM;AAAA,MACN,SAAS;AAAA,IACX,CAAC;AACD,aAAS,KAAK,QAAQ,IAAI,KAAK,OAAO,KAAK;AAAA,MACzC,UAAU,gBAAgB;AAAA,IAC5B,CAAC;AACD,gBAAY,KAAK,QAAQ,IAAI,KAAK,OAAO,KAAK;AAAA,MAC5C,UAAU,KAAK,kBAAkB;AAAA,IACnC,CAAC;AAAA,EACH;AACF,CAAC;AAGD,IAAO,gBAAQ;","names":[]}